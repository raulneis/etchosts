#!/usr/bin/env php
<?php
define ('VERSION', '0.1');
define ('ETC_HOSTS', '/etc/hosts');

if ($argc == 1) {
    do_list();

} elseif ($argv[1] == 'help' || $argv[1] == '-h') {
    do_help();

} elseif ($argv[1] == 'list') {
    do_list();

} elseif ($argv[1] == 'add') {
    if ($argc != 4) {
        do_error('etchosts add expects exactly two parameters.'.PHP_EOL.PHP_EOL.'       etchosts add <host> <ip>'.PHP_EOL);
    }
    $host = $argv[2];
    $ip = $argv[3];
    if (!validateHost($host)) {
        do_error('Host is not valid.');
    }
    if (!validateIp($ip)) {
        do_error('Ip is not valid.');
    }
    do_add($host, $ip);

} elseif ($argv[1] == 'rm' || $argv[1] == 'remove') {
    if ($argc != 3) {
        do_error('etchosts rm expects exactly one parameter.'.PHP_EOL.PHP_EOL.'       etchosts [rm|remove] <host>'.PHP_EOL);
    }
    $host = $argv[2];
    if (!validateHost($host, true)) {
        do_error('Host is not valid.');
    }
    do_remove($host);

} else {
    do_error('unknown command \''.$argv[1].'\'');

}
exit(0);

function do_help()
{
    echo sprintf('etchosts '.VERSION.' -- A tool for programatically manage the /etc/hosts file'.PHP_EOL.PHP_EOL);
    echo sprintf('Usage: etchosts                    -- shows hosts list'.PHP_EOL);
    echo sprintf('       etchosts list               -- shows hosts list'.PHP_EOL);
    echo sprintf('       etchosts [help|-h]          -- shows this help'.PHP_EOL);
    echo sprintf('       etchosts add <host> <ip>    -- adds the host with the associated ip'.PHP_EOL);
    echo sprintf('       etchosts [rm|remove] <host> -- removes the host'.PHP_EOL);
}


function do_list()
{
    $data = parse();

    $max = 0;
    foreach ($data as $line) {
        $max = max($max, strlen($line['host']));
    }
    
    foreach ($data as $line) {
        if ($line['host']) {
            echo sprintf("\033[37m %02d. \033[0m", $line['line']);
            echo sprintf("\033[27m%".$max."s\033[0m => \033[27m%s\033[0m".PHP_EOL, $line['host'], $line['ip']);
        }
    }
    exit();
    $data = file_get_contents(ETC_HOSTS);
    $lines = explode("\n", $data);

    $i = 1;
    foreach ($lines as $line) {
        echo sprintf("\033[37m %02d. \033[0m", $i);
        if (substr($line, 0, 1) != '#') {
            echo sprintf('%s'.PHP_EOL, $line);
        } else {
            echo sprintf("\033[37m%s\033[0m".PHP_EOL, $line);
        }
        $i++;
    }
}

function do_error($msg)
{
    echo 'Error: '.$msg.PHP_EOL;
    exit(1);
}

function do_remove($host)
{
    $regex = regex($host);

    $found = false;
    $new = [];
    foreach (parse() as $data) {
        if ($data['host'] && preg_match($regex, $data['host']) > 0) {
            $found = true;
        } else {
            $new[] = $data;
        }
    }

    if (!$found) {
        do_error('host '.$host.' not found.');
    }

    save($new);
}

function do_add($host, $ip)
{
    $found = false;
    $new = [];
    foreach (parse() as $data) {
        if ($data['host'] && $data['host'] == $host) {
            $found = true;
        } else {
            $new[] = $data;
        }
    }

    if ($found) {
        do_error('host '.$host.' already exists!');
    }

    $sp = str_repeat(' ', (4 * floor((strlen($ip) + 8) / 4)) - strlen($ip));
    $new[] = [
        'ip' => $ip,
        'host' => $host,
        'original' => $ip.$sp.$host,
    ];

    save($new);
}

function parse() {
    $data = file_get_contents(ETC_HOSTS);
    $lines = explode("\n", $data);

    $ret = [];
    $i = 1;
    foreach ($lines as $line) {
        $original = $line;
        $line = preg_replace('~#.*$~', '', $line);
        $line = trim($line);

        $ip = null;
        $host = null;
        if ($line) {
            list($ip, $host) = preg_split('~\s+~', $line);            
        }

        $ret[] = [
            'line' => $i,
            'ip' => $ip,
            'host' => $host,
            'original' => $original,
        ];

        $i++;
    }

    return $ret;
}

function save($data)
{
    if (!is_writable(ETC_HOSTS)) {
        do_error('file '.ETC_HOSTS.' is not writable. Maybe you should run etchosts with sudo.');
    }

    $content = [];
    foreach ($data as $d) {
        $content[] = $d['original'];
    }
    $content = implode("\n", $content);

    file_put_contents(ETC_HOSTS, $content);
}

function regex($host)
{
    $regex = preg_replace('~\.~', '[.]', $host);
    $regex = preg_replace('~\*~', '[^.]*', $regex);
    $regex = '^'.$regex.'$';
    $regex = preg_replace('~#~', '\\#', $regex);
    $regex = '#'.$regex.'#';

    return $regex;
}

function validateIp($ip)
{
    return ! (filter_var($ip, FILTER_VALIDATE_IP) === false);
}

function validateHost($host, $includeRegex = false)
{
    if ($includeRegex) {
        return preg_match('#^([a-zA-Z0-9_*-]+)([.]([a-zA-Z0-9_*-]+))*[.]?$#', $host) != 0;
    } else {
        return preg_match('#^([a-zA-Z0-9_-]+)([.]([a-zA-Z0-9_-]+))*[.]?$#', $host) != 0;
    }
}
